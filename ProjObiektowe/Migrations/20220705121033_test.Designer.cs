// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjObiektowe.Database;

namespace ProjObiektowe.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220705121033_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjObiektowe.Models.Ingrediens", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingrediens");
                });

            modelBuilder.Entity("ProjObiektowe.Models.Recipes", b =>
                {
                    b.Property<int>("RecepieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfPortions")
                        .HasColumnType("int");

                    b.Property<string>("RecepieIngriedients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecepieTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecepieID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ProjObiektowe.Models.RecipesIngrediens", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipesIngrediens");
                });

            modelBuilder.Entity("ProjObiektowe.Models.RecipesTags", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RecipesTags");
                });

            modelBuilder.Entity("ProjObiektowe.Models.Tags", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ProjObiektowe.Models.RecipesIngrediens", b =>
                {
                    b.HasOne("ProjObiektowe.Models.Ingrediens", "Ingrediens")
                        .WithMany("RecipesIngrediens")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjObiektowe.Models.Recipes", "Recipes")
                        .WithMany("RecipesIngrediens")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediens");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("ProjObiektowe.Models.RecipesTags", b =>
                {
                    b.HasOne("ProjObiektowe.Models.Recipes", "Recipes")
                        .WithMany("RecipesTags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjObiektowe.Models.Tags", "Tags")
                        .WithMany("RecipesTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipes");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("ProjObiektowe.Models.Ingrediens", b =>
                {
                    b.Navigation("RecipesIngrediens");
                });

            modelBuilder.Entity("ProjObiektowe.Models.Recipes", b =>
                {
                    b.Navigation("RecipesIngrediens");

                    b.Navigation("RecipesTags");
                });

            modelBuilder.Entity("ProjObiektowe.Models.Tags", b =>
                {
                    b.Navigation("RecipesTags");
                });
#pragma warning restore 612, 618
        }
    }
}
